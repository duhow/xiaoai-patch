#!/bin/sh

if [ "$1" = "up" ]; then
  VOL="3%+"
elif [ "$1" = "down" ]; then
  VOL="4%-"
elif [ ! -z "$1" ] && [ "$1" -ge 0 ] 2>/dev/null && [ "$1" -le 100 ]; then
  VOL=$1
  let VOL=VOL*255/100
else
  echo "Usage: $0 [up|down|NUMBER]"
  return
fi

for SRC in bluetooth mysoftvol notifyvol 'headphone volume'; do
  amixer set "$SRC" $VOL &>/dev/null &
done

if [ -e /usr/share/sound/volume.mp3 ]; then
    mpg123 -q -a notify /usr/share/sound/volume.mp3 &
else
    aplay -Dnotify /usr/share/sound/volume.wav &>/dev/null &
fi

# SHOW VOLUME LED
CURVOL=$(amixer get mysoftvol | awk '$0~/%/{print $4}' | tr -d '[]%' | head -n1)
if [ "$CURVOL" -ge 0 ] && [ "$CURVOL" -le 100 ]; then

  MODEL=$(uci -c /usr/share/mico get version.version.HARDWARE)
  COLOR="0x903000" # HEX BGR
  BLACK="0x0"

  case "${MODEL}" in
    LX06)
      LEDMAX=17
      LEDSYS=/sys/devices/i2c-0/0-003a/led_rgb
      # starts from play button
      LEDSEQ="$(seq 10 17) $(seq 0 9)"
      ;;
    L09A)
      LEDMAX=23
      LEDSYS=/sys/devices/i2c-0/0-003b/led_rgb
      LEDSEQ="$(seq 12 23) $(seq 0 11)"
      ;;
    LX01 | LX05)
      LEDMAX=0  # 1 but needed
      LEDSYS=/proc/ws2812/rgb0
      LEDSEQ=0
      COLOR="48 144" # HACK LEDSEQ+COLOR RGB
      BLACK="0 0"    # HACK LEDMAX+BLACK
      ;;
    *)
      exit 0
      ;;
  esac

  let AMOUNT=1+CURVOL*LEDMAX/100

  for LED in ${LEDSEQ}; do
    [ "$AMOUNT" -le 0 ] && COLOR="${BLACK}" # reset to black
    echo ${LED} ${COLOR} > ${LEDSYS}
    let AMOUNT=AMOUNT-1
  done

  # wait led
  CURRENT=$(cut -d'.' -f1 /proc/uptime)
  TMPWAIT=/tmp/wait_led
  WAIT_TIME=5

  let AMOUNT=CURRENT+WAIT_TIME
  echo ${AMOUNT} > ${TMPWAIT}

  # wait in background, only last execution counts
  ( sleep $WAIT_TIME; \
    if [ -f "$TMPWAIT" ] && [ "$(cat ${TMPWAIT} 2>/dev/null)" -eq "$(cut -d'.' -f1 /proc/uptime)" ]; then \
    rm ${TMPWAIT} &>/dev/null; \
    for LED in $(seq 0 $LEDMAX); do echo ${LED} ${BLACK} > ${LEDSYS}; done \
    fi \
  ) &
fi
